domain: example.com
appsDomain: exampleapps.com

tls:
  enabled: false
  fullchain:
  privkey:

postgresql:
  create: true
  image:
    repository: postgres
    tag: 9.6.14
  persistence:
    enabled: true
    mountPath: /data
  # dataDir cannot be the mountPath,
  # it has to be a subdirectory
  postgresqlDataDir: /data/pgdata
  # postgresqlHost is only used if create=false
  postgresqlHost:
  postgresqlDatabase: storyscript
  postgresqlUsername: storyscript_superuser
  postgresqlPassword: storyscript_superuser

nginx-ingress:
  rbac:
    create: true
  controller:
    service:
      # only for GKE
      loadBalancerIP:

##########################
# storyscript components #
##########################

auth:
  image: storyscript/auth:v0.2.0
  jwt:
    secret_key: my-secret-key

  allowlist_token: allowlist-token
  # GitHub app oauth credentials, callback URL set to:
  #  https://auth.{{ .Values.domain }}/callback
  github:
    client_id:
    client_secret:

compiler:
  image: storyscript/language:v0.28.0

creds:
  image: storyscript/creds:v0.3.0
  gcp_secretmanager_key:
  github:
    client_id:
    client_secret:
  slack:
    client_id:
    client_secret:

geh:
  image: storyscript/geh:v0.4.0
  slack_signing_key:

graphql:
  image: storyscript/graphql:v0.5.0
  # Credentials of the role used by the API server
  postgresqlUsername: storyscript_authenticator
  postgresqlPassword: storyscript_authenticator
  corsWhitelistRegexp: .*

http:
  image: storyscript/http:v0.4.0

router:
  image: storyscript/router:v0.1.0
  # only for GKE
  loadBalancerIP:

runtime:
  image: storyscript/runtime:v0.10.0
  wolfram_app_id:
  github:
    app_id:
    app_private_key:

schema:
  image: storyscript/schema:v0.5.0

sls:
  image: storyscript/sls:v0.5.2

studio:
  image: storyscript/studio:v0.12.1
  integrations:
    intercom:
    fullstory:
  sentry:
    dsn:

worker:
  image: storyscript/worker:v0.3.0
